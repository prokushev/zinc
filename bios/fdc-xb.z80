;::::::::::::::::::::::::::::::::::::::::::::******************************
;  Floppy Disk I/O Routines		     ***** Hardware Dependent *****
;    - Amstrad XBIOS -	                     ******************************
;
;::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

	  IF  BANKED
	COMMON	/BANK2/
	  ELSE
	CSEG
	  ENDIF

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; STMODE  (Function 0) - Set the FDC mode for the read/write operations.
;
; Enter:  A = Single-Density Flag (0FFH = FM (SD), 00 = MFM (DD))
; Exit :  Nothing
; Uses : AF		all others preserved/unaffected
;
; Assumes STSIZE and STSECT called first
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

STMODE:	
	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; STSIZE  (Function 1) - Set Drive Size (3.5", 5.25" or 8"), Drive Speed,
;  (High/Low) Capability, and a Boolean flag for whether Motor Control is
;  needed by the Drive.
;
; Enter: A = Hi Speed Flag (0 = Normal, 0FFH = High Speed (Dens) Capable)
;	 D = Motor Flag (0 = No Motor Control, 0FFH = Motor needed)
;	 E = Drive Size (0 = Hard, 001 = 8", 010 = 5.25", 011 = 3.5")
; Exit :  Nothing
; Uses : AF		All others preserved/unaffected
;
; Call STHDRV First.  Call before calling STMODE.
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

STSIZE:	
	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; STHDRV  (Function 2) - Set Head and Drive for Disk Operations.
;
; Enter:  A = Unit # in D0-D1, Head in D2
; Exit :  Nothing
; Uses : AF		All others preserved/unaffected
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

STHDRV:	
	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; STSECT  (Function 3) - Set Sector #, Size and Last Sector
;
; Enter:  A = Physical Sector Number
;	  D = Sector Size (0=128, 1=256..)
;	  E = Physical Last Sector # on Side
; Exit :  Nothing
; Uses : AF		All others preserved/unaffected
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

STSECT:	
	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; SPEC  (Function 4) - Do Specify Command, setting Step Rate and Head Load/
;  Unload Time.  DMA mode always chosen. Values are rounded up if not even.
;
; Enter:  D = Head Unload Time in mS
;	  E = Head Load Time in mS
;	  A = Step Rate in mS
; Exit :  Nothing
; Uses : AF		All others preserved/unaffected
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

SPEC:	
	RET			; ..and quit

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; RECAL  (Function 5) - Recalibrate Drive (Moves the head(s) to track 0).
;
; Enter:  Nothing
; Exit :  A = 0 if Ok, NZ if Error.  Flags reflect A
; Uses : AF		All others preserved/unaffected
;
; NOTE: BC MUST be preserved by this routine!
; Assumes STHDRV, STMODE, STSIZE and SPEC called first.
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

RECAL:	
	RET			;   and Return Ok

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; SEEK  (Function 6) - Set the Track # for Disk Operations and Seek to It.
;
; Enter:  A = Desired Track Number
;	  D = Verify Flag (0=No, FF=Yes)
;	  E = Double-step Flag (E <> 0 for Double-step)
; Exit :  A = 0, Zero Flag Set (Z) if Ok, A <> 0, Zero Clear (NZ) if Error.
; Uses : AF			all others preserved/unaffected
;
; Assumes STHDRV, SPEC, STSIZE and STMODE are called first.
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

SEEK:	
	RET


;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; SREAD  (Function 7) - Read a Sector from a Floppy Disk.  The Mode,
;  Head/Drive, Track, and Sector must have already been set.
;
; Enter:  HL --> Read Buffer
; Exit :  A = 0 if No Errors, NZ if Errors.  Flags reflect A
; Uses : AF			all others preserved/unaffected
;
; Assumes STHDRV, STMODE, SPEC, STSECT and SEEK were previously called
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

SREAD:	
	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; SWRITE  (Function 8) - Write a Sector to the Floppy Disk.  The Mode,
;  Head/Drive, Track, and Sector must have already been set.
;
; Enter: HL --> Write Buffer
; Exit :   A = 0 if No Errors, NZ if Errors, Flags reflect A
; Uses : AF			all others preserved/unaffected
;
; Assumes STHDRV, STMODE, SPEC, STSECT and SEEK were previously called
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

SWRITE:	
	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; READID  (Function 9) - Read the first valid ID Mark on a Track.
;
; Enter:  Nothing
; Exit :  A = 0 if Ok, NZ if Error.  Flags reflect A
; Uses : AF			all others preserved/unaffected
;
; Assumes STHDRV, SPEC, STSIZE and STMODE called first.
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

READID:	
	RET			; ..and quit

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; RETDST (Function 10) - Return the status of a drive (ST3).
;  This function uses separate control writing to the FDC since it
;  generates No DMA interrupts and therefore will never exit from FDCMD.
;
; Enter:  Nothing
; Exit :  A = ST3 status byte
;	 BC = 9266 (FDC Controller Type)
;	 HL = Address of ST0 Status Field/Byte
; Uses : AF, BC, HL		all others preserved/unaffected
;
; Assumes STHDRV called first
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

RETDST:	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; FMTTRK  (Function 11) - Format a complete track on one side of a Floppy
;  Disk.  The Mode, Head/Drive, Track, and Sector must have been set.
;
; Enter:  D = Formatting Sctrs/Track (SPT) Value
;	  E = Formatting Gap 3 Byte Count
;	 HL = Pointer to Controller-dependent Format Data Block
; Exit :  A = 0 if No Errors, NZ if Errors.  Flags reflect A
; Uses : All Primary Registers
;
; Assumes STHDRV, STMODE, SPEC, STSECT and SEEK were previously called
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

FMTTRK:	RET

;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
; Hardware-Dependent Host Read/Write Routine linked to from FLOPPY module.
;  This routine Reads/Writes data from HSTBUF trying up to MXRTRY times
;  before giving up.  If an error occurs after the next-to-last try, the
;  heads are homed to force a re-seek.
;
; Enter:  (RDOP Set for desired operation)
; Exit :  A = 0, Zero Set (Z) if Ok, A <> 0, Zero Reset (NZ) if Errors
; Uses : AF,HL
;
; Assumes: RDOP is set to 1 for Read, 0 for Write, TTRK set with desired
;  Track number, STHDRV, STSECT, STMODE, SPEC all called previously.
;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

FHDRW:	RET

	  IF  BANKED
	COMMON	/B2RAM/
	  ELSE
	DSEG
	  ENDIF

HDR:	DEFS	1		; 9266 head/drive

; DISK subsystem variable storage.

FDMOT:	DEFS	1		; Motor on required flag
RDOP:	DEFS	1		; Read/write flag
RETRYS:	DEFS	1		; Number of tries
RWRTRY:	DEFS	1		; Number of read/write tries
RWDT:	DEFS	2		; 9266 read/write data ptr
DRVSPD:	DEFS	1		; 9266 drive speed
DRVSIZ:	DEFS	1		; 9266 drive size
STEP2:	DEFS	1		; Double Step flag		(** Global **)
MODE:	DEFS	1		; 9266 Mode (D6 = MFM)
TSBSCF:	DEFS	1		; 0=Flag (Side-by-Sctr Cont)	(** Global **)

TTRK:	DEFS	1		; Temp Trk Storage		(** Global **)
TRKARY:	DEFS	4		; Storage for last track on each drive

;=========================== End of FDC ===========================
