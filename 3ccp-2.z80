;
;**** Section 2 ****
; CPR STARTING POINTS
;
; START CPR AND DON'T PROCESS DEFAULT COMMAND STORED
;
CPR1:	
	XOR	A		;SET NO DEFAULT COMMAND
	LD	(CBUFF),A
;
; START CPR AND POSSIBLY PROCESS DEFAULT COMMAND
;
; NOTE ON MODIFICATION BY RGF: BDOS RETURNS 0FFH IN
; ACCUMULATOR WHENEVER IT LOGS IN A DIRECTORY, IF ANY
; FILE NAME CONTAINS A '$' IN IT.  THIS IS NOW USED AS
; A CLUE TO DETERMINE WHETHER OR NOT TO DO A SEARCH
; FOR SUBMIT FILE, IN ORDER TO ELIMINATE WASTEFUL SEARCHES.
;
CPR:	
	LD	SP,STACK	;RESET STACK
	PUSH	BC
	LD	A,C		;C=USER/DISK NUMBER (SEE LOC 4)
	RRA			;EXTRACT USER NUMBER
	RRA	
	RRA	
	RRA	
	AND	0FH
	LD	E,A		;SET USER NUMBER
	CALL	SETUSR
	CALL	RESET		;RESET DISK SYSTEM
	LD	(RNGSUB),A	;SAVE SUBMIT CLUE FROM DRIVE A:
	POP	BC
	LD	A,C		;C=USER/DISK NUMBER (SEE LOC 4)
	AND	0FH		;EXTRACT DEFAULT DISK DRIVE
	LD	(TDRIVE),A	;SET IT
	JR      Z, NOLOG	;SKIP IF 0...ALREADY LOGGED
	CALL	LOGIN		;LOG IN DEFAULT DISK
	LD	A, 'A'
	CALL	CONOUT
;
	IF	NOT SUBA	;IF $$$.SUB IS ON CURRENT DRIVE
	LD	(RNGSUB),A	;BDOS '$' CLUE
	ENDIF	
;
NOLOG:	
	LD	DE,SUBFCB	;CHECK FOR $$$.SUB ON CURRENT DISK
RNGSUB:	EQU	$+1		;POINTER FOR IN-THE-CODE MODIFICATION
	LD	A,0		;2ND BYTE (IMMEDIATE ARG) IS THE RNGSUB FLAG
	OR	A		;SET FLAGS ON CLUE
	CPL			;PREPARE FOR COMING 'CMA'
	CALL	NZ,SEAR1
	CPL			;0FFH IS RETURNED IF NO $$$.SUB, SO COMPLEMENT
	LD	(RNGSUB),A	;SET FLAG (0=NO $$$.SUB)
	LD	A,(CBUFF)	;EXECUTE DEFAULT COMMAND?
	OR	A		;0=NO
	JR      NZ, RS1
;
; PROMPT USER AND INPUT COMMAND LINE FROM HIM
;
RESTRT:	
	LD	SP,STACK	;RESET STACK
;
; PRINT PROMPT (DU>)
;
	CALL	CRLF		;PRINT PROMPT
	CALL	GETDRV		;CURRENT DRIVE IS PART OF PROMPT
	ADD	A,'A'		;CONVERT TO ASCII A-P
	CALL	CONOUT
	CALL	GETUSR		;GET USER NUMBER
;
	IF	SUPRES		;IF SUPPRESSING USR # REPORT FOR USR 0
	OR	A
	JR      Z,RS000
	ENDIF	
;
	CP	10		;USER < 10?
	JR      C,RS00
	SUB	A,10		;SUBTRACT 10 FROM IT
	PUSH	AF		;SAVE IT
	LD	A,'1'		;OUTPUT 10'S DIGIT
	CALL	CONOUT
	POP	AF
RS00:	
	ADD	A,'0'		;OUTPUT 1'S DIGIT (CONVERT TO ASCII)
	CALL	CONOUT
;
; READ INPUT LINE FROM USER OR $$$.SUB
;
RS000:	
	CALL	REDBUF		;INPUT COMMAND LINE FROM USER (OR $$$.SUB)
;
; PROCESS INPUT LINE
;
RS1:	
;
	IF	CLEVEL3		;IF THIRD COMMAND LEVEL IS PERMITTED
	CALL	CNVBUF		;CAPITALIZE COMMAND LINE, PLACE ENDING 0,
	; AND SET CIBPTR VALUE
	ENDIF	
;
	CALL	DEFDMA		;SET TBUFF TO DMA ADDRESS
	CALL	GETDRV		;GET DEFAULT DRIVE NUMBER
	LD	(TDRIVE),A	;SET IT
	CALL	SCANER		;PARSE COMMAND NAME FROM COMMAND LINE
	CALL	NZ,ERROR	;ERROR IF COMMAND NAME CONTAINS A '?'
	LD	DE,RSTCPR	;PUT RETURN ADDRESS OF COMMAND
	PUSH	DE		;ON THE STACK
	LD	A,(TEMPDR)	;IS COMMAND OF FORM 'D:COMMAND'?
	OR	A		;NZ=YES
	JP	NZ,COM		; IMMEDIATELY
	CALL	CMDSER		;SCAN FOR CPR-RESIDENT COMMAND
	JP	NZ,COM		;NOT CPR-RESIDENT
	LD	A,(HL)		;FOUND IT:  GET LOW-ORDER PART
	INC	HL		;GET HIGH-ORDER PART
	LD	H,(HL)		;STORE HIGH
	LD	L,A		;STORE LOW
	JP	(HL)		;EXECUTE CPR ROUTINE
;
; ENTRY POINT FOR RESTARTING CPR AND LOGGING IN DEFAULT DRIVE
;
RSTCPR:	
	CALL	DLOGIN		;LOG IN DEFAULT DRIVE
;
; ENTRY POINT FOR RESTARTING CPR WITHOUT LOGGING IN DEFAULT DRIVE
;
RCPRNL:	
	CALL	SCANER		;EXTRACT NEXT TOKEN FROM COMMAND LINE
	LD	A,(FCBFN)	;GET FIRST CHAR OF TOKEN
	SUB	A,' '		;ANY CHAR?
	LD	HL,TEMPDR
	OR	(HL)
	JP	NZ,ERROR
	JR	RESTRT
;
; No File Error Message
;
PRNNF:	
	CALL	PRINTC		;NO FILE MESSAGE
	DEFB	'No Fil','e'+80H
	RET	
